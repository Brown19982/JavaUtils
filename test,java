function encodeHTML(str) {
	return str.replace(/&/g, '&amp;')
		.replace(/</g, '&lt;')
		.replace(/>/g, '&gt;')
		.replace(/"/g, '&quot;')
		.replace(/'/g, '&#39;');
}
//取得AP參數
(function() {
	var property_types = ['chatbot','celebrus','moneydj'];
	// 排除清單
	var excludes = {
		chatbot: ['/api/edm'],
		celebrus: []
	};
    $.ajax({
        type: 'post',
        async: false,
        dataType: "json",
        url: ajaxPrefix + 'PropertiesServlet.do',
        contentType: 'application/json; charset=UTF-8',
        data: JSON.stringify({
        	types: property_types
        }),
        success: function(json) {
            if (typeof json == 'string') json = JSON.parse(json);
        	if (json && json.success && json.data) {
        		var url = json.data;
				
        		// 智能客服
        		if (url.chatbot) {
        			if (excludes.chatbot.length > 0) {
						excludes.chatbot.forEach(exclude => {
							if (window.location.href.indexOf(exclude) === -1) {
								chatbot(encodeHTML(url.chatbot));
							}
						});        				
        			} else {
						chatbot(encodeHTML(url.chatbot));
						
        			}
        		}
        		// 數位行為收集
        		if (url.celebrus) {
        			if (excludes.celebrus.length > 0) {
    					excludes.celebrus.forEach(exclude => {
    						if (window.location.href.indexOf(exclude) === -1) {
    							//appendScript(url.celebrus); 
    							appendScript(encodeHTML(url.celebrus));
    						}
    					});        				
        			} else {
						//appendScript(url.celebrus);
        				appendScript(encodeHTML(url.celebrus));
        			}
        		}
        		// 嘉實參數
        		if (url.moneydj) {
        			iframe_domain = url.moneydj;
        		}        		
        	}
        }
    });
})();

// 智能客服
function chatbot(url) {
	sessionStorage.setItem('channel', 'CW');
	appendScript(url);
}

// 加上Script
function appendScript(url){
	var comp = document.createElement('script');
	comp.type = 'text/javascript';
	comp.async = true;
	comp.src = url;
	var s = document.getElementsByTagName('script')[0];
	s.parentNode.insertBefore(comp, s);		
}
方法function在transglobe\js\config.js第172 行會從使用者端取得暫存資訊(Cache)，如Cookie、HTML5的LocalStorage，或本地資料庫，做為json元素的值。而程式流程中沒有被正確地過濾(Filter)或編碼(Encode)，並最終在客戶端程式碼(JavaScript)在transglobe\js\config.js第224行appendScript方法於瀏覽器中執行。這可能為DOM存儲的程式碼注入(DOM
