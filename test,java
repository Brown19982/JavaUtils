<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <div>
        <label for="scale-select">缩放选项:</label>
        <select id="scale-select">
          <option value="page-width">页面宽度</option>
          <option value="50">50%</option>
          <option value="75">75%</option>
          <option value="100" selected>100%</option>
          <option value="125">125%</option>
          <option value="150">150%</option>
          <option value="200">200%</option>
          <option value="300">300%</option>
          <option value="400">400%</option>
        </select>
        <button id="zoom-in">放大</button>
        <button id="zoom-out">缩小</button>
        <button id="prev-page">上一页</button>
        <button id="next-page">下一页</button>
    </div>
    <div id="viewer" class="pdfViewer"></div>
    <script src="pdf.js"></script>
    <script src="pdf.worker.js"></script>
    <script src="jquery-3.2.1.min.js"></script>
    <script>
        var pdfDocument;
        var jsUrl = './FHP_11007.pdf';
        var jsUrlAsString = jsUrl.toString();
        loadPDF(jsUrlAsString, 1.5);
        function loadPDF(pdfurl, scale) {
            pdfjsLib.getDocument(pdfurl).promise.then(pdf => {
                pdfDocument = pdf;
                let viewer = document.getElementById('viewer');
                for (let i = 1; i <= pdfDocument.numPages; i++) {
                    let page = createEmptyPage(i, i);
                    viewer.appendChild(page);
                }
                for (var j = 1; j <= pdfDocument.numPages; j++) {
                    loadPage(j, scale, j).then(pdfPage => {
                        pdfPage.getViewport({ scale: scale });
                    });
                }
            });
        }

        function createEmptyPage(num, k) {
            let page = document.createElement('div');
            let canvas = document.createElement('canvas');
            let wrapper = document.createElement('div');
            let textLayer = document.createElement('div');

            page.className = 'page';
            wrapper.className = 'canvasWrapper';
            textLayer.className = 'textLayer';

            page.setAttribute('id', `pageContainer-` + k);
            page.setAttribute('data-loaded', 'false');
            page.setAttribute('data-page-number', num);

           // canvas.setAttribute('id', `page${num}-` + k);

            page.appendChild(wrapper);
            page.appendChild(textLayer);
            wrapper.appendChild(canvas);

            return page;
        }

        function loadPage(pageNum, scale, k) {
            return pdfDocument.getPage(pageNum).then(pdfPage => {
                let page = document.getElementById(`pageContainer-` + k);
                let canvas = page.querySelector('canvas');
                let wrapper = page.querySelector('.canvasWrapper');
                let container = page.querySelector('.textLayer');
                let canvasContext = canvas.getContext('2d');
                let viewport = pdfPage.getViewport({ scale: scale });

                canvas.width = viewport.width;
                canvas.height = viewport.height;
                page.style.width = `${viewport.width}px`;
                page.style.height = `${viewport.height}px`;
                wrapper.style.width = `${viewport.width}px`;
                wrapper.style.height = `${viewport.height}px`;
                container.style.width = `${viewport.width}px`;
                container.style.height = `${viewport.height}px`;
                container.style.transform = `scale(${scale})`;
                pdfPage.render({
                    canvasContext,
                    viewport
                });

                pdfPage.getTextContent().then(textContentSource => {
                    pdfjsLib.renderTextLayer({
                        textContentSource: textContentSource,
                        container: container,
                        viewport: viewport,
                        textDivs: []
                    });
                });

                page.setAttribute('data-loaded', 'true');
                let viewer = document.getElementById('viewer');
                //viewer.style.height = `${viewport.height * pdfDocument.numPages}px`;
                viewer.style.height = 'auto';
                viewer.style.overflowX = 'auto'
                return pdfPage;
            });
        }

    </script>
</body>

</html>
